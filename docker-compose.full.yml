version: '3.8'

services:
  # Aplicação principal CrypGo
  crypgo-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crypgo-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - GO_ENV=production
    env_file:
      - .env.production
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - crypgo-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/trading/list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Banco de dados PostgreSQL
  postgres:
    image: postgres:16
    container_name: crypgo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: crypgo_prod
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./src/infra/database/migrations:/docker-entrypoint-initdb.d
    networks:
      - crypgo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Message Broker RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: crypgo-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-admin123}
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"  # Management interface
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - crypgo-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy (Opcional)
  nginx:
    image: nginx:alpine
    container_name: crypgo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web:/var/www/html:ro
    networks:
      - crypgo-network
    depends_on:
      - crypgo-app
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  crypgo-network:
    driver: bridge
    name: crypgo-network

volumes:
  postgres_data:
    driver: local
    name: crypgo_postgres_data
  rabbitmq_data:
    driver: local
    name: crypgo_rabbitmq_data