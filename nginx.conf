events {
    worker_connections 1024;
}

http {
    # MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=5r/s;

    # IP whitelist configuration - Updated 2025-07-18
    geo $allowed_ip {
        default 0;
        177.181.176.178 1;  # Previous IP address
        191.58.90.55 1;     # Current IP address - CONFIRMED ACTIVE
        52.90.23.45 1;      # VPN IP address
        189.124.160.45 1;   # Current real IP address - ACTIVE
        127.0.0.1 1;        # Localhost
        ::1 1;              # IPv6 localhost
    }

    upstream crypgo_backend {
        server crypgo-app:8080;
    }

    server {
        listen 80;
        server_name _;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Robots-Tag "noindex, nofollow" always;

        # Block access to sensitive files and directories
        location ~ /\.(env|git|svn|htaccess|htpasswd) {
            deny all;
            return 404;
        }

        location ~ \.(php|asp|aspx|jsp|cgi)$ {
            deny all;
            return 404;
        }

        # Block common attack patterns
        location ~ /(wp-admin|wp-login|admin|administrator|phpmyadmin|mysql|sql) {
            deny all;
            return 404;
        }

        # API routes - IP whitelisted and rate limited
        location /api/ {
            # IP whitelist check
            if ($allowed_ip = 0) {
                return 403 '{"error":"Access denied","message":"IP not whitelisted"}';
            }

            # Rate limiting
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://crypgo_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            add_header Content-Type application/json;
        }

        # Health check endpoint - IP whitelisted
        location /health {
            # IP whitelist check
            if ($allowed_ip = 0) {
                return 403 '{"error":"Health check access denied"}';
            }

            proxy_pass http://crypgo_backend/api/v1/health;
            proxy_set_header Host $host;
            access_log off;
            add_header Content-Type application/json;
        }

        # Static assets (CSS, JS, images) - IP whitelisted
        location ~* ^/(css|js|images|assets)/ {
            # IP whitelist check
            if ($allowed_ip = 0) {
                return 403 '{"error":"Assets access denied","message":"IP not whitelisted"}';
            }

            root /var/www/html;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # Dashboard static files - IP whitelisted
        location /dashboard/ {
            # IP whitelist check
            if ($allowed_ip = 0) {
                return 403 '{"error":"Dashboard access denied","message":"IP not whitelisted"}';
            }

            alias /var/www/html/;
            try_files $uri $uri/ /index.html;
        }

        # Root redirect to dashboard - IP whitelisted
        location = / {
            # IP whitelist check
            if ($allowed_ip = 0) {
                return 403 '{"error":"Access denied","message":"IP not whitelisted"}';
            }
            
            return 301 /dashboard/;
        }

        # Fallback for any other dashboard routes - serve via Go app
        location / {
            # Rate limiting for general requests
            limit_req zone=general burst=10 nodelay;
            
            # IP whitelist check for dashboard access
            if ($allowed_ip = 0) {
                add_header Content-Type application/json;
                return 200 '{"message":"CrypGo Trading Bot API","version":"1.0","status":"IP whitelisting active","note":"API access restricted to authorized IPs"}';
            }

            # Try static files first, then proxy to Go app
            try_files /var/www/html$uri @backend;
        }

        location @backend {
            proxy_pass http://crypgo_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}